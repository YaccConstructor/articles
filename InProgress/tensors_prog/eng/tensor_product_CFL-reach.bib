@inproceedings{bradford2007quickest,
  author = {Bradford, Phillip G.},
  title = {Quickest Path Distances on Context-Free Labeled Graphs},
  year = {2007},
  isbn = {9789606766251},
  publisher = {World Scientific and Engineering Academy and Society (WSEAS)},
  address = {Stevens Point, Wisconsin, USA},
  booktitle = {Proceedings of the 6th WSEAS International Conference on Information Security and Privacy},
  pages = {22--29},
  numpages = {8},
  keywords = {quickest path, labeled graph, dynamic programming, context-free grammar, algorithm design},
  location = {Tenerife, Spain},
  series = {ISP'07}
}

@article{ward2010complexity,
  author = {Ward, Charles B. and Wiegand, Nathan M.},
  title = {Complexity Results on Labeled Shortest Path Problems from Wireless Routing Metrics},
  year = {2010},
  issue_date = {February 2010},
  publisher = {Elsevier North-Holland, Inc.},
  address = {USA},
  volume = {54},
  number = {2},
  issn = {1389-1286},
  url = {https://doi.org/10.1016/j.comnet.2009.04.012},
  doi = {10.1016/j.comnet.2009.04.012},
  journal = {Comput. Netw.},
  month = feb,
  pages = {208--217},
  numpages = {10},
  keywords = {Shortest paths, Approximation algorithms, Labeled paths, Wireless routing metrics}
}

@inproceedings{Azimov:2018:CPQ:3210259.3210264,
  author = {Azimov, Rustam and Grigorev, Semyon},
  title = {Context-free Path Querying by Matrix Multiplication},
  booktitle = {Proceedings of the 1st ACM SIGMOD Joint International Workshop on Graph Data Management Experiences \& Systems (GRADES)  and Network Data Analytics (NDA)},
  series = {GRADES-NDA '18},
  year = {2018},
  isbn = {978-1-4503-5695-4},
  location = {Houston, Texas},
  pages = {5:1--5:10},
  articleno = {5},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/3210259.3210264},
  doi = {10.1145/3210259.3210264},
  acmid = {3210264},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {GPGPU, context-free grammar, context-free path querying, graph databases, matrix multiplication, transitive closure},
}

@article{fan2018scaling,
  title={Scaling-Up In-Memory Datalog Processing: Observations and Techniques},
  author={Fan, Zhiwei and Zhu, Jianqiao and Zhang, Zuyu and Albarghouthi, Aws and Koutris, Paraschos and Patel, Jignesh},
  journal={arXiv preprint arXiv:1812.03975},
  year={2018}
}


@article{albrechtefficient,
  title={Efficient multiplication of dense matrices over GF (2)},
  author={Albrecht, MR and Bard, GV and Hart, W},
  journal={arXiv preprint arXiv:0811.1714},
  year={2008}
}


@article{hellingsPathQuerying,
  title={Querying for Paths in Graphs using Context-Free Path Queries},
  author={Hellings, Jelle},
  journal={arXiv preprint arXiv:1502.02242},
  year={2015}
}


@manual{M4RI,
  key          = "M4RI",
  author       = "Martin Albrecht and Gregory Bard",
  organization = "The M4RI~Team",
  title        = "{The M4RI Library}",
  year         = 2019,
  url          = {https://bitbucket.org/malb/m4ri},
}

@inproceedings{hellingsRelational,
  title={Conjunctive context-free path queries},
  author={Hellings, Jelle},
  booktitle={Proceedings of ICDT'14},
  pages={119--130},
  year={2014}
}


@Misc{scipy,
  author =    {Eric Jones and Travis Oliphant and Pearu Peterson and others},
  title =     {{SciPy}: Open source scientific tools for {Python}},
  year =      {2001--2019},
  url = "http://www.scipy.org/",
  note = {[Online; accessed 5.3.2019]}
}


@inproceedings{arlazarov1970economical,
  title={On economical construction of the transitive closure of an oriented graph},
  author={Arlazarov, Vladimir L'vovich and Dinitz, Yefim A and Kronrod, MA and Faradzhev, IgorAleksandrovich},
  booktitle={Doklady Akademii Nauk},
  volume={194},
  number={3},
  pages={487--488},
  year={1970},
  organization={Russian Academy of Sciences}
}
@inproceedings{RDF,
  author={Zhang, X. and Feng, Z. and Wang, X. and Rao, G. and Wu, W.},
  title={Context-free path queries on RDF graphs},
  booktitle={International Semantic Web Conference},
  pages={632--648},
  year={2016},
  organization={Springer}
}

@book{FndDB,
  author = {Abiteboul, Serge and Hull, Richard and Vianu, Victor},
  title = {Foundations of Databases: The Logical Level},
  year = {1995},
  isbn = {0201537710},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  address = {USA},
  edition = {1st}
}


@inproceedings{Grigorev:2017:CPQ:3166094.3166104,
 author = {Grigorev, Semyon and Ragozina, Anastasiya},
 title = {Context-free Path Querying with Structural Representation of Result},
 booktitle = {Proceedings of the 13th Central \& Eastern European Software Engineering Conference in Russia},
 series = {CEE-SECR '17},
 year = {2017},
 isbn = {978-1-4503-6396-9},
 location = {St. Petersburg, Russia},
 pages = {10:1--10:7},
 articleno = {10},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/3166094.3166104},
 doi = {10.1145/3166094.3166104},
 acmid = {3166104},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CFPQ, GLL, LL, context-free grammar, graph database, graph parsing, path query, top-down parsing},
}

@inproceedings{Verbitskaia:2018:PCC:3241653.3241655,
 author = {Verbitskaia, Ekaterina and Kirillov, Ilya and Nozkin, Ilya and Grigorev, Semyon},
 title = {Parser Combinators for Context-free Path Querying},
 booktitle = {Proceedings of the 9th ACM SIGPLAN International Symposium on Scala},
 series = {Scala 2018},
 year = {2018},
 isbn = {978-1-4503-5836-1},
 location = {St. Louis, MO, USA},
 pages = {13--23},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/3241653.3241655},
 doi = {10.1145/3241653.3241655},
 acmid = {3241655},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Context-Free Language Reachability, Context-Free Path Querying, GLL, Generalized LL, Graph Databases, Language-Constrained Path Problem, Neo4j, Parser Combinators, Scala},
}
@InProceedings{10.1007/978-3-319-91662-0_17,
  author="Santos, Fred C.
  and Costa, Umberto S.
  and Musicante, Martin A.",
  editor="Mikkonen, Tommi
  and Klamma, Ralf
  and Hern{\'a}ndez, Juan",
  title="A Bottom-Up Algorithm for Answering Context-Free Path Queries in Graph Databases",
  booktitle="Web Engineering",
  year="2018",
  publisher="Springer International Publishing",
  address="Cham",
  pages="225--233",
  abstract="Many computing applications require processing of data that are directly collected from the Internet. In this context, the use of the Resource Description Framework (RDF) has became a common feature. The query and analysis of RDF data is paramount to explore the full potential of the data available on the Web. Query languages for RDF graph databases rely on the use of regular expressions to identify paths over the data. Some interesting queries, such as same-generation queries, cannot be expressed by regular expressions. We are interested in extending the expressiveness of queries over graph databases by using paths defined by context-free grammars. We introduce a new query algorithm to process context-free path queries over graph databases. Our approach is inspired by the LR(1) parsing techniques. A prototype was implemented and experiments were conducted to validate and compare the results of our algorithm with those obtained by similar approaches.",
  isbn="978-3-319-91662-0"
}

@inproceedings{Medeiros:2018:EEC:3167132.3167265,
  author = {Medeiros, Ciro M. and Musicante, Martin A. and Costa, Umberto S.},
  title = {Efficient Evaluation of Context-free Path Queries for Graph Databases},
  booktitle = {Proceedings of the 33rd Annual ACM Symposium on Applied Computing},
  series = {SAC '18},
  year = {2018},
  isbn = {978-1-4503-5191-1},
  location = {Pau, France},
  pages = {1230--1237},
  numpages = {8},
  url = {http://doi.acm.org/10.1145/3167132.3167265},
  doi = {10.1145/3167132.3167265},
  acmid = {3167265},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {context-free grammars, context-free paths in graphs, graph databases, query languages, top-down parsing},
}

@inproceedings{Mishin:2019:ECP:3327964.3328503,
  author = {Mishin, Nikita and Sokolov, Iaroslav and Spirin, Egor and Kutuev, Vladimir and Nemchinov, Egor and Gorbatyuk, Sergey and Grigorev, Semyon},
  title = {Evaluation of the Context-Free Path Querying Algorithm Based on Matrix Multiplication},
  booktitle = {Proceedings of the 2Nd Joint International Workshop on Graph Data Management Experiences \& Systems (GRADES) and Network Data Analytics (NDA)},
  series = {GRADES-NDA'19},
  year = {2019},
  isbn = {978-1-4503-6789-9},
  location = {Amsterdam, Netherlands},
  pages = {12:1--12:5},
  articleno = {12},
  numpages = {5},
  url = {http://doi.acm.org/10.1145/3327964.3328503},
  doi = {10.1145/3327964.3328503},
  acmid = {3328503},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {CUDA, Context-free path querying, GPGPU, boolean matrix, context-free grammar, graph databases, matrix multiplication, transitive closure},
}

@misc{yang2019graphblast,
  title={GraphBLAST: A High-Performance Linear Algebra-based Graph Framework on the GPU},
  author={Carl Yang and Aydin Buluc and John D. Owens},
  year={2019},
  eprint={1908.01407},
  archivePrefix={arXiv},
  primaryClass={cs.DC}
}

@INPROCEEDINGS{8778293,
  author={P. {Cailliau} and T. {Davis} and V. {Gadepally} and J. {Kepner} and R. {Lipman} and J. {Lovitz} and K. {Ouaknine}},
  booktitle={2019 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)},
  title={RedisGraph GraphBLAS Enabled Graph Database},
  year={2019},
  publisher = {{IEEE}},
  volume={},
  number={},
  pages={285-286},
  keywords={graph theory;matrix algebra;NoSQL databases;optimisation;sparse matrices;Redis module;Redis Labs;graph database   functionality;Redis database;adjacency matrices;sparse matrices;highly optimized library;sparse matrix operations;RedisGraph GraphBLAS enabled graph database;Benchmark testing;Sparse matrices;Instruction sets;Time factors;Software algorithms;Distributed   databases;graph;database;sparce matrices;graphblas;cypher},
  doi={10.1109/IPDPSW.2019.00054},
  ISSN={},
  month={May},
}

@INPROCEEDINGS{7761646,
author={J. {Kepner} and P. {Aaltonen} and D. {Bader} and A. {Buluc} and F. {Franchetti} and J. {Gilbert} and D. {Hutchison} and M. {Kumar} and A. {Lumsdaine} and H. {Meyerhenke} and S. {McMillan} and C. {Yang} and J. D. {Owens} and M. {Zalewski} and T. {Mattson} and J. {Moreira}},
booktitle={2016 IEEE High Performance Extreme Computing Conference (HPEC)},
title={Mathematical foundations of the GraphBLAS},
year={2016},
volume={},
number={},
pages={1-9},
keywords={graph theory;mathematics computing;matrix algebra;programming environments;mathematical foundations;GraphBLAS standard;GraphBlas.org;matrix-based graph algorithms;matrix-based graph operations;programming environments;adjacency matrices;incidence matrices;matrix multiplication;matrix mathematics;Matrices;Sparse matrices;Finite element analysis;Standards;Additives},
doi={10.1109/HPEC.2016.7761646},
ISSN={},
month={Sep.},}

@article{Wang:2017:GGG:3131890.3108140,
 author = {Wang, Yangzihao and Pan, Yuechao and Davidson, Andrew and Wu, Yuduo and Yang, Carl and Wang, Leyuan and Osama, Muhammad and Yuan, Chenshan and Liu, Weitang and Riffel, Andy T. and Owens, John D.},
 title = {Gunrock: GPU Graph Analytics},
 journal = {ACM Trans. Parallel Comput.},
 issue_date = {October 2017},
 volume = {4},
 number = {1},
 month = aug,
 year = {2017},
 issn = {2329-4949},
 pages = {3:1--3:49},
 articleno = {3},
 numpages = {49},
 url = {http://doi.acm.org/10.1145/3108140},
 doi = {10.1145/3108140},
 acmid = {3108140},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {GPU, Graph processing, runtime framework},
}

@inproceedings{ward2008distributed,
 author = {Ward, Charles B. and Wiegand, Nathan M. and Bradford, Phillip G.},
 title = {A Distributed Context-Free Language Constrained Shortest Path Algorithm},
 booktitle = {Proceedings of the 2008 37th International Conference on Parallel Processing},
 series = {ICPP '08},
 year = {2008},
 isbn = {978-0-7695-3374-2},
 pages = {373--380},
 numpages = {8},
 url = {https://doi.org/10.1109/ICPP.2008.67},
 doi = {10.1109/ICPP.2008.67},
 acmid = {1442530},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {labeled graphs, labeled paths},
}

@inproceedings{bradford2016fast,
  title={Fast point-to-point Dyck constrained shortest paths on a DAG},
  author={Bradford, Phillip G and Choppella, Venkatesh},
  booktitle={2016 IEEE 7th Annual Ubiquitous Computing, Electronics \& Mobile Communication Conference (UEMCON)},
  pages={1--7},
  year={2016},
  organization={IEEE}
}


@article{10.1145/3322125,
author = {Davis, Timothy A.},
title = {Algorithm 1000: SuiteSparse:GraphBLAS: Graph Algorithms in the Language of Sparse Linear Algebra},
year = {2019},
issue_date = {December 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {4},
issn = {0098-3500},
url = {https://doi.org/10.1145/3322125},
doi = {10.1145/3322125},
journal = {ACM Trans. Math. Softw.},
month = dec,
articleno = {44},
numpages = {25},
keywords = {sparse matrices, GraphBLAS, Graph algorithms}
}

@article{Zheng:2008:DAA:1328897.1328464,
 author = {Zheng, Xin and Rugina, Radu},
 title = {Demand-driven Alias Analysis for C},
 journal = {SIGPLAN Not.},
 issue_date = {January 2008},
 volume = {43},
 number = {1},
 month = jan,
 year = {2008},
 issn = {0362-1340},
 pages = {197--208},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1328897.1328464},
 doi = {10.1145/1328897.1328464},
 acmid = {1328464},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CFL reachability, alias analysis, demand-driven analysis, memory disambiguation, pointer analysis},
}

@inproceedings{veduradabatch,
author = {Vedurada, Jyothi and Nandivada, V. Krishna},
title = {Batch Alias Analysis},
year = {2019},
isbn = {9781728125084},
publisher = {IEEE Press},
url = {https://doi.org/10.1109/ASE.2019.00091},
doi = {10.1109/ASE.2019.00091},
booktitle = {Proceedings of the 34th IEEE/ACM International Conference on Automated Software Engineering},
pages = {936--948},
numpages = {13},
location = {San Diego, California},
series = {ASE '19}
}

@inproceedings{LPAR-21:Cauliflower_Solver_Generator_for,
  author    = {Nicholas Hollingum and Bernhard Scholz},
  title     = {Cauliflower: a Solver Generator for Context-Free Language Reachability},
  booktitle = {LPAR-21. 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning},
  editor    = {Thomas Eiter and David Sands},
  series    = {EPiC Series in Computing},
  volume    = {46},
  pages     = {171--180},
  year      = {2017},
  publisher = {EasyChair},
  bibsource = {EasyChair, https://easychair.org},
  issn      = {2398-7340},
  url       = {https://easychair.org/publications/paper/bnVq},
  doi       = {10.29007/tbm7}}

  @ARTICLE{Albert_statisticalmechanics,
      author = {R\'eka Albert and Albert-l\'aszl\'o Barab\'asi},
      title = {Statistical mechanics of complex networks},
      journal = {Rev. Mod. Phys},
      year = {},
      pages = {2002}
  }

@article{GraphQueryWithEarley,
  title={Subgraph queries by context-free grammars},
  author={Sevon, Petteri and Eronen, Lauri},
  journal={Journal of Integrative Bioinformatics},
  volume={5},
  number={2},
  pages={100},
  year={2008}
}

@inproceedings{NsparsePaper,
author={Y. {Nagasaka} and A. {Nukada} and S. {Matsuoka}},
booktitle={2017 46th International Conference on Parallel Processing (ICPP)},
title={High-Performance and Memory-Saving Sparse General Matrix-Matrix Multiplication for NVIDIA Pascal GPU},
year={2017},
volume={},
number={},
pages={101-110},
keywords={graphics processing units;matrix multiplication;parallel processing;shared memory systems;software performance evaluation;storage management;sparse general matrix-matrix multiplication;SpGEMM;NVIDIA Pascal GPU;graphics processing unit;high performance computing;on-chip shared memory;hash table;performance evaluation;memory usage reduction;Sparse matrices;Graphics processing units;Memory management;Acceleration;Instruction sets;Kernel;Parallel processing;Sparse matrix;SpGEMM;GPU},
doi={10.1109/ICPP.2017.19},
ISSN={2332-5690},
month={Aug}
}

@MISC{Cusp,
  author = "Steven Dalton and Nathan Bell and Luke Olson and Michael Garland",
  title = "Cusp: Generic Parallel Algorithms for Sparse Matrix and Graph Computations",
  year = "2014",
  url = "http://cusplibrary.github.io/",
  note = "Version 0.5.0"
}

@inproceedings{GpuMergePathPaper,
  author = {Green, Oded and McColl, Robert and Bader, David A.},
  title = {GPU Merge Path: A GPU Merging Algorithm},
  year = {2012},
  isbn = {9781450313162},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/2304576.2304621},
  doi = {10.1145/2304576.2304621},
  booktitle = {Proceedings of the 26th ACM International Conference on Supercomputing},
  pages = {331–340},
  numpages = {10},
  keywords = {graphics processors, parallel systems, parallel algorithms, measurement of multiple-processor systems},
  location = {San Servolo Island, Venice, Italy},
  series = {ICS'12}
}


@INPROCEEDINGS{8731467, author={H. {Miao} and A. {Deshpande}}, booktitle={2019 IEEE 35th International Conference on Data Engineering (ICDE)}, title={Understanding Data Science Lifecycle Provenance via Graph Segmentation and Summarization}, year={2019}, volume={}, number={}, pages={1710-1713},}

@book{automata:theory:10.5555/1177300,
  author = {Hopcroft, John E. and Motwani, Rajeev and Ullman, Jeffrey D.},
  title = {Introduction to Automata Theory,  Languages, and Computation (3rd Edition)}, year = {2006}, 
  isbn = {0321462254}, 
  publisher = {Addison-Wesley Longman Publishing Co., Inc.}, 
  address = {USA} 
}

@inproceedings{cs6345,
 author    = {Kathrin Hanauer and
               Monika Henzinger and
               Christian Schulz},
  editor    = {Simone Faro and
               Domenico Cantone},
  title     = {Faster Fully Dynamic Transitive Closure in Practice},
  booktitle = {18th International Symposium on Experimental Algorithms, {SEA} 2020,
               June 16-18, 2020, Catania, Italy},
  series    = {LIPIcs},
  volume    = {160},
  pages     = {14:1--14:14},
  publisher = {Schloss Dagstuhl - Leibniz-Zentrum f{\"{u}}r Informatik},
  year      = {2020},
  month = {June},
  url = {http://eprints.cs.univie.ac.at/6345/},
  doi       = {10.4230/LIPIcs.SEA.2020.14},
  timestamp = {Tue, 16 Jun 2020 17:17:57 +0200},
  biburl    = {https://dblp.org/rec/conf/wea/HanauerH020.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{10.1007/3-540-57273-2_72,
author="Subramanian, Sairam",
editor="Lengauer, Thomas",
title="A fully dynamic data structure for reachability in planar digraphs",
booktitle="Algorithms---ESA '93",
year="1993",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="372--383",
abstract="In this paper we investigate the problem of maintaining all-pairs reachability information in a planar digraph G as it undergoes changes. We give a fully dynamic O(n)-space data structure to support an arbitrary sequence of operations that consist of adding new edges (or nodes), deleting some existing edge, and querying to find out if a given node v is reachable in G by a directed path from another node u.",
isbn="978-3-540-48032-7"
}
@article{IBARAKI198395,
title = "On-line computation of transitive closures of graphs",
journal = "Information Processing Letters",
volume = "16",
number = "2",
pages = "95 - 97",
year = "1983",
issn = "0020-0190",
doi = "https://doi.org/10.1016/0020-0190(83)90033-9",
url = "http://www.sciencedirect.com/science/article/pii/0020019083900339",
author = "T. Ibaraki and N. Katoh",
keywords = "Transitive closure, directed graph, on-line algorithm"
}
@inproceedings{Chaudhuri2008SubcubicAF,
  title={Subcubic algorithms for recursive state machines},
  author={Swarat Chaudhuri},
  booktitle={POPL '08},
  year={2008}
}
@article{10.1145/3158118,
author = {Chatterjee, Krishnendu and Choudhary, Bhavya and Pavlogiannis, Andreas},
title = {Optimal Dyck Reachability for Data-Dependence and Alias Analysis},
year = {2017},
issue_date = {January 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {POPL},
url = {https://doi.org/10.1145/3158118},
doi = {10.1145/3158118},
journal = {Proc. ACM Program. Lang.},
month = dec,
articleno = {30},
numpages = {30},
keywords = {Data-dependence analysis, CFL reachability, Dyck reachability, treewidth, Bidirected graphs}
}
@misc{chistikov2021subcubic,
      title={Subcubic Certificates for CFL Reachability}, 
      author={Dmitry Chistikov and Rupak Majumdar and Philipp Schepper},
      year={2021},
      eprint={2102.13095},
      archivePrefix={arXiv},
      primaryClass={cs.FL}
}
@inproceedings{Pacaci2020RegularPQ,
author = {Pacaci, Anil and Bonifati, Angela and \"{O}zsu, M. Tamer},
title = {Regular Path Query Evaluation on Streaming Graphs},
year = {2020},
isbn = {9781450367356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3318464.3389733},
doi = {10.1145/3318464.3389733},
abstract = {We study persistent query evaluation over streaming graphs, which is becoming increasingly important. We focus on navigational queries that determine if there exists a path between two entities that satisfies a user-specified constraint. We adopt the Regular Path Query (RPQ) model that specifies navigational patterns with labeled constraints. We propose deterministic algorithms to efficiently evaluate persistent RPQs under both arbitrary and simple path semantics in a uniform manner. Experimental analysis on real and synthetic streaming graphs shows that the proposed algorithms can process up to tens of thousands of edges per second and efficiently answer RPQs that are commonly used in real-world workloads.},
booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
pages = {1415--1430},
numpages = {16},
keywords = {persistent query evaluation, streaming graphs, regular path queries},
location = {Portland, OR, USA},
series = {SIGMOD '20}
}
}


@InProceedings{rsm:analysis:10.1007/3-540-44585-4_18,
 author="Alur, Rajeev and Etessami, Kousha and Yannakakis, Mihalis",
 editor="Berry, G{\'e}rard and Comon, Hubert and Finkel, Alain",
 title="Analysis of Recursive State Machines",
 booktitle="Computer Aided Verification",
 year="2001",
 publisher="Springer Berlin Heidelberg",
 address="Berlin, Heidelberg",
 pages="207--220",
 abstract="Recursive state machines (RSMs) enhance the power of ordinary state machines by allowing vertices to correspond 
 either to ordinary states or to potentially recursive invocations of other state machines. RSMs can model the control 
 flow in sequential imperative programs containing recursive procedure calls. They can be viewed as a visual notation 
 extending Statecharts-like hierarchical state machines, where concurrency is disallowed but recursion is allowed. 
 They are also related to various models of pushdown systems studied in the verification and program analysis communities.",
 isbn="978-3-540-44585-2"
}


@INPROCEEDINGS{8249039,
author={P. G. {Bradford}},
booktitle={2017 IEEE 8th Annual Ubiquitous Computing, Electronics and Mobile Communication Conference (UEMCON)},
title={Efficient exact paths for dyck and semi-dyck labeled path reachability (extended abstract)},
year={2017},
volume={},
number={},
pages={247--253},
publisher = {{IEEE}},
keywords={computational complexity;directed graphs;formal languages;graph theory;matrix multiplication;reachability analysis;efficient exact paths;weighted digraph;exact path length problem;exact path problem;original edge weights;path solutions;labeled digraph;semiDyck languages;Dyck languages;labeled path problems;Grammar;Heuristic algorithms;Jacobian matrices;Costing;Algorithm design and analysis;Shortest path problem},
doi={10.1109/UEMCON.2017.8249039},
ISSN={},
month={Oct},}
@article{IMPAGLIAZZO2001367,
title = {On the Complexity of k-SAT},
journal = {Journal of Computer and System Sciences},
volume = {62},
number = {2},
pages = {367-375},
year = {2001},
issn = {0022-0000},
doi = {https://doi.org/10.1006/jcss.2000.1727},
url = {https://www.sciencedirect.com/science/article/pii/S0022000000917276},
author = {Russell Impagliazzo and Ramamohan Paturi},
}
@article{Gajentaan1995OnAC,
  title={On a class of O(n2) problems in computational geometry},
  author={Anka Gajentaan and M. Overmars},
  journal={Comput. Geom.},
  year={1995},
  volume={45},
  pages={140-152}
}
@inproceedings{Patrascu,
author = {Patrascu, Mihai},
title = {Towards Polynomial Lower Bounds for Dynamic Problems},
year = {2010},
isbn = {9781450300506},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1806689.1806772},
doi = {10.1145/1806689.1806772},
abstract = {We consider a number of dynamic problems with no known poly-logarithmic upper bounds, and show that they require nΩ(1) time per operation, unless 3SUM has strongly subquadratic algorithms. Our result is modular: (1) We describe a carefully-chosen dynamic version of set disjointness (the "multiphase problem"), and conjecture that it requires n^Omega(1) time per operation. All our lower bounds follow by easy reduction. (2) We reduce 3SUM to the multiphase problem. Ours is the first nonalgebraic reduction from 3SUM, and allows 3SUM-hardness results for combinatorial problems. For instance, it implies hardness of reporting all triangles in a graph. (3) It is plausible that an unconditional lower bound for the multiphase problem can be established via a number-on-forehead communication game.},
booktitle = {Proceedings of the Forty-Second ACM Symposium on Theory of Computing},
pages = {603–610},
numpages = {8},
keywords = {3SUM, dynamic data structures, lower bounds},
location = {Cambridge, Massachusetts, USA},
series = {STOC '10}
}

@article{barrett2000formal,
author = {Barrett, Chris and Jacob, Riko and Marathe, Madhav},
title = {Formal-Language-Constrained Path Problems},
year = {2000},
issue_date = {May 2000},
publisher = {Society for Industrial and Applied Mathematics},
address = {USA},
volume = {30},
number = {3},
issn = {0097-5397},
url = {https://doi.org/10.1137/S0097539798337716},
doi = {10.1137/S0097539798337716},
journal = {SIAM J. Comput.},
month = may,
pages = {809--837},
numpages = {29},
keywords = {World Wide Web, transportation planning, multicriteria problems, formal languages, algorithms, query processing, computational complexity, shortest paths}
}

@inproceedings{Yannakakis,
 author = {Yannakakis, Mihalis},
 title = {Graph-theoretic Methods in Database Theory},
 booktitle = {Proceedings of the Ninth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems},
 series = {PODS '90},
 year = {1990},
 isbn = {0-89791-352-3},
 location = {Nashville, Tennessee, USA},
 pages = {230--242},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/298514.298576},
 doi = {10.1145/298514.298576},
 acmid = {298576},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Kuijpers:2019:ESC:3335783.3335791,
 author = {Kuijpers, Jochem and Fletcher, George and Yakovets, Nikolay and Lindaaker, Tobias},
 title = {An Experimental Study of Context-Free Path Query Evaluation Methods},
 booktitle = {Proceedings of the 31st International Conference on Scientific and Statistical Database Management},
 series = {SSDBM '19},
 year = {2019},
 isbn = {978-1-4503-6216-0},
 location = {Santa Cruz, CA, USA},
 pages = {121--132},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/3335783.3335791},
 doi = {10.1145/3335783.3335791},
 acmid = {3335791},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{10.1145/1328897.1328460,
author = {Chaudhuri, Swarat},
title = {Subcubic Algorithms for Recursive State Machines},
year = {2008},
issue_date = {January 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {43},
number = {1},
issn = {0362-1340},
url = {https://doi.org/10.1145/1328897.1328460},
doi = {10.1145/1328897.1328460},
journal = {SIGPLAN Not.},
month = jan,
pages = {159–169},
numpages = {11},
keywords = {recursive state machines, interprocedural analysis, cubic bottleneck, transitive closure, CFL-reachability, context-free languages, pushdown systems}
}
  
@inproceedings{10.1145/1328438.1328460,
author = {Chaudhuri, Swarat},
title = {Subcubic Algorithms for Recursive State Machines},
year = {2008},
isbn = {9781595936899},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1328438.1328460},
doi = {10.1145/1328438.1328460},
booktitle = {Proceedings of the 35th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {159--169},
numpages = {11},
keywords = {pushdown systems, recursive state machines, transitive closure, CFL-reachability, context-free languages, cubic bottleneck, interprocedural analysis},
location = {San Francisco, California, USA},
series = {POPL '08}
}
  
@inproceedings{10.1145/2463664.2465216,
author = {Barcel\'{o} Baeza, Pablo},
title = {Querying Graph Databases},
year = {2013},
isbn = {9781450320665},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2463664.2465216},
doi = {10.1145/2463664.2465216},
booktitle = {Proceedings of the 32nd ACM SIGMOD-SIGACT-SIGAI Symposium on Principles of Database Systems},
pages = {175--188},
numpages = {14},
keywords = {containment, conjunctive regular path queries, graph databases, query evaluation, expressiveness},
location = {New York, New York, USA},
series = {PODS '13}
}

@inproceedings{10.1145/2960414.2960421,
author = {van Rest, Oskar and Hong, Sungpack and Kim, Jinha and Meng, Xuming and Chafi, Hassan},
title = {PGQL: A Property Graph Query Language},
year = {2016},
isbn = {9781450347808},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2960414.2960421},
doi = {10.1145/2960414.2960421},
booktitle = {Proceedings of the Fourth International Workshop on Graph Data Management Experiences and Systems},
articleno = {7},
numpages = {6},
keywords = {graph query languages, property graphs, graph-structured data},
location = {Redwood Shores, California},
series = {GRADES '16}
}

@InProceedings{10.1007/978-3-319-25007-6_1,
author="Kostylev, Egor V.
and Reutter, Juan L.
and Romero, Miguel
and Vrgo{\v{c}}, Domagoj",
editor="Arenas, Marcelo
and Corcho, Oscar
and Simperl, Elena
and Strohmaier, Markus
and d'Aquin, Mathieu
and Srinivas, Kavitha
and Groth, Paul
and Dumontier, Michel
and Heflin, Jeff
and Thirunarayan, Krishnaprasad
and Thirunarayan, Krishnaprasad
and Staab, Steffen",
title="SPARQL with Property Paths",
booktitle="The Semantic Web - ISWC 2015",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="3--18",
abstract="The original SPARQL proposal was often criticized for its inability to navigate through the structure of RDF documents. For this reason property paths were introduced in SPARQL 1.1, but up to date there are no theoretical studies examining how their addition to the language affects main computational tasks such as query evaluation, query containment, and query subsumption. In this paper we tackle all of these problems and show that although the addition of property paths has no impact on query evaluation, they do make the containment and subsumption problems substantially more difficult.",
isbn="978-3-319-25007-6"
}

@article{10.1145/3104031,
author = {Angles, Renzo and Arenas, Marcelo and Barcel\'{o}, Pablo and Hogan, Aidan and Reutter, Juan and Vrgo\v{c}, Domagoj},
title = {Foundations of Modern Query Languages for Graph Databases},
year = {2017},
issue_date = {November 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {50},
number = {5},
issn = {0360-0300},
url = {https://doi.org/10.1145/3104031},
doi = {10.1145/3104031},
journal = {ACM Comput. Surv.},
month = sep,
articleno = {68},
numpages = {40},
keywords = {navigation, query languages, Property graphs, aggregation, graph databases, graph patterns}
}

@article{10.1145/2850413,
author = {Libkin, Leonid and Martens, Wim and Vrgo\v{c}, Domagoj},
title = {Querying Graphs with Data},
year = {2016},
issue_date = {May 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {63},
number = {2},
issn = {0004-5411},
url = {https://doi.org/10.1145/2850413},
doi = {10.1145/2850413},
journal = {J. ACM},
month = mar,
articleno = {14},
numpages = {53},
keywords = {Graph databases, XPath, data values, navigational queries}
}

@article{Wang2019,
  doi = {10.1007/s11280-019-00739-0},
  url = {https://doi.org/10.1007/s11280-019-00739-0},
  year = {2019},
  month = nov,
  publisher = {Springer Science and Business Media {LLC}},
  volume = {23},
  number = {3},
  pages = {1465--1496},
  author = {Wang, Xin and Wang, Simiao and Xin, Yueqi and Yang, Yajun and Li, Jianxin and Wang, Xiaofei},
  title = {Distributed Pregel-based provenance-aware regular path query processing on {RDF} knowledge graphs},
  journal = {World Wide Web}
}

@inproceedings{10.1145/2949689.2949711,
author = {Nol\'{e}, Maurizio and Sartiani, Carlo},
title = {Regular Path Queries on Massive Graphs},
year = {2016},
isbn = {9781450342155},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2949689.2949711},
doi = {10.1145/2949689.2949711},
booktitle = {Proceedings of the 28th International Conference on Scientific and Statistical Database Management},
articleno = {13},
numpages = {12},
location = {Budapest, Hungary},
series = {SSDBM '16}
}

@inproceedings{10.1145/3398682.3399163,
author = {Terekhov, Arseniy and Khoroshev, Artyom and Azimov, Rustam and Grigorev, Semyon},
title = {Context-Free Path Querying with Single-Path Semantics by Matrix Multiplication},
year = {2020},
isbn = {9781450380218},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3398682.3399163},
doi = {10.1145/3398682.3399163},
booktitle = {Proceedings of the 3rd Joint International Workshop on Graph Data Management Experiences \& Systems (GRADES) and Network Data Analytics (NDA)},
articleno = {5},
numpages = {12},
keywords = {matrix multiplication, transitive closure, Boolean matrix, CUDA, Context-free path querying, RedisGraph database, GPGPU, context-free grammar, linear algebra, graph databases},
location = {Portland, OR, USA},
series = {GRADES-NDA'20}
}

@inproceedings{10.5555/3291656.3291682,
author = {Li, Jiajia and Sun, Jimeng and Vuduc, Richard},
title = {HiCOO: Hierarchical Storage of Sparse Tensors},
year = {2018},
publisher = {IEEE Press},
booktitle = {Proceedings of the International Conference for High Performance Computing, Networking, Storage, and Analysis},
articleno = {19},
numpages = {15},
location = {Dallas, Texas},
series = {SC '18}
}

@article{10.14778/3384345.3384358,
author = {Gera, Prasun and Kim, Hyojong and Sao, Piyush and Kim, Hyesoon and Bader, David},
title = {Traversing Large Graphs on GPUs with Unified Memory},
year = {2020},
issue_date = {March 2020},
publisher = {VLDB Endowment},
volume = {13},
number = {7},
issn = {2150-8097},
url = {https://doi.org/10.14778/3384345.3384358},
doi = {10.14778/3384345.3384358},
journal = {Proc. VLDB Endow.},
month = mar,
pages = {1119--1133},
numpages = {15}
}

@INPROCEEDINGS{8946118,
  author    = {Steven Wei Der Chien and
               Ivy Bo Peng and
               Stefano Markidis},
  title     = {Performance Evaluation of Advanced Features in {CUDA} Unified Memory},
  booktitle = {2019 {IEEE/ACM} Workshop on Memory Centric High Performance Computing,
               MCHPC@SC 2019, Denver, CO, USA, November 18, 2019},
  pages     = {50--57},
  publisher = {{IEEE}},
  year      = {2019},
  url       = {https://doi.org/10.1109/MCHPC49590.2019.00014},
  doi       = {10.1109/MCHPC49590.2019.00014},
  timestamp = {Mon, 20 Jan 2020 19:48:47 +0100},
  biburl    = {https://dblp.org/rec/conf/sc/ChienPM19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{10.1007/978-3-662-54458-7_16,
author = {Bouyer, Patricia and Jug\'{e}, Vincent},
title = {Dynamic Complexity of the Dyck Reachability},
year = {2017},
isbn = {9783662544570},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
url = {https://doi.org/10.1007/978-3-662-54458-7_16},
doi = {10.1007/978-3-662-54458-7_16},
booktitle = {Proceedings of the 20th International Conference on Foundations of Software Science and Computation Structures - Volume 10203},
pages = {265--280},
numpages = {16}
}

@misc{zhang2020conditional,
    title={Conditional Lower Bound for Inclusion-Based Points-to Analysis},
    author={Qirun Zhang},
    year={2020},
    eprint={2007.05569},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@misc{pavlogiannis2020finegrained,
    title={The Fine-Grained and Parallel Complexity of Andersen's Pointer Analysis},
    author={Andreas Pavlogiannis and Anders Alnor Mathiasen},
    year={2020},
    eprint={2006.01491},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@InProceedings{10.1007/978-3-319-41579-6_22,
author="Verbitskaia, Ekaterina
and Grigorev, Semyon
and Avdyukhin, Dmitry",
editor="Mazzara, Manuel
and Voronkov, Andrei",
title="Relaxed Parsing of Regular Approximations of String-Embedded Languages",
booktitle="Perspectives of System Informatics",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="291--302",
abstract="We present a technique for syntax analysis of a regular set of input strings. This problem is relevant for the analysis of string-embedded languages when a host program generates clauses of embedded language at run time. Our technique is based on a generalization of RNGLR algorithm, which, inherently, allows us to construct a finite representation of parse forest for regularly approximated set of input strings. This representation can be further utilized for semantic analysis and transformations in the context of reengineering, code maintenance, program understanding etc. The approach in question implements relaxed parsing: non-recognized strings in approximation set are ignored with no error detection.",
isbn="978-3-319-41579-6"
}


@inproceedings{10.1145/3302424.3303962,
author = {Jamour, Fuad and Abdelaziz, Ibrahim and Chen, Yuanzhao and Kalnis, Panos},
title = {Matrix Algebra Framework for Portable, Scalable and Efficient Query Engines for RDF Graphs},
year = {2019},
isbn = {9781450362818},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3302424.3303962},
doi = {10.1145/3302424.3303962},
booktitle = {Proceedings of the Fourteenth EuroSys Conference 2019},
articleno = {27},
numpages = {15},
keywords = {Graph Query Engines, RDF, Matrix Algebra},
location = {Dresden, Germany},
series = {EuroSys '19}
}

@article{DBLP:journals/corr/MetzlerM15a,
  author    = {Saskia Metzler and
               Pauli Miettinen},
  title     = {On Defining {SPARQL} with Boolean Tensor Algebra},
  journal   = {CoRR},
  volume    = {abs/1503.00301},
  year      = {2015},
  url       = {http://arxiv.org/abs/1503.00301},
  archivePrefix = {arXiv},
  eprint    = {1503.00301},
  timestamp = {Mon, 13 Aug 2018 16:46:25 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/MetzlerM15a.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{10.1145/3299869.3319882,
author = {Wadhwa, Sarisht and Prasad, Anagh and Ranu, Sayan and Bagchi, Amitabha and Bedathur, Srikanta},
title = {Efficiently Answering Regular Simple Path Queries on Large Labeled Networks},
year = {2019},
isbn = {9781450356435},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3299869.3319882},
doi = {10.1145/3299869.3319882},
booktitle = {Proceedings of the 2019 International Conference on Management of Data},
pages = {1463--1480},
numpages = {18},
keywords = {reachability query, regular expression, regular path query, knowledge graphs, random walks},
location = {Amsterdam, Netherlands},
series = {SIGMOD '19}
}
  
@article{Glushkov1961,
  doi = {10.1070/rm1961v016n05abeh004112},
  url = {https://doi.org/10.1070/rm1961v016n05abeh004112},
  year = {1961},
  month = oct,
  publisher = {{IOP} Publishing},
  volume = {16},
  number = {5},
  pages = {1--53},
  author = {V M Glushkov},
  title = {{THE} {ABSTRACT} {THEORY} {OF} {AUTOMATA}},
  journal = {Russian Mathematical Surveys}
}

@article{10.1016/S0022-0000(75)80046-8,
author = {Valiant, Leslie G.},
title = {General Context-Free Recognition in Less than Cubic Time},
year = {1975},
issue_date = {April, 1975},
publisher = {Academic Press, Inc.},
address = {USA},
volume = {10},
number = {2},
issn = {0022-0000},
url = {https://doi.org/10.1016/S0022-0000(75)80046-8},
doi = {10.1016/S0022-0000(75)80046-8},
journal = {J. Comput. Syst. Sci.},
month = apr,
pages = {308--315},
numpages = {8}
}

@InProceedings{10.1007/978-3-642-31235-9_12,
author="Koschmieder, Andr{\'e}
and Leser, Ulf",
editor="Ailamaki, Anastasia
and Bowers, Shawn",
title="Regular Path Queries on Large Graphs",
booktitle="Scientific and Statistical Database Management",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="177--194",
abstract="The significance of regular path queries (RPQs) on graph-like data structures has grown steadily over the past decade. RPQs are, often in restricted forms, part of graph-oriented query languages such as XQuery/XPath and SPARQL, and have applications in areas such as semantic, social, and biomedical networks. However, existing systems for evaluating RPQs are restricted either in the type of the graph (e.g., only trees), the type of regular expressions (e.g., only single steps), and/or the size of the graphs they can handle. No method has yet been developed that would be capable of efficiently evaluating general RPQs on large graphs, i.e., with millions of nodes/edges.",
isbn="978-3-642-31235-9"
}

@article{10.1177/1094342011403516,
author = {Bulu\c{c}, Ayd\i{}n and Gilbert, John R},
title = {The Combinatorial BLAS: Design, Implementation, and Applications},
year = {2011},
issue_date = {November  2011},
publisher = {Sage Publications, Inc.},
address = {USA},
volume = {25},
number = {4},
issn = {1094-3420},
url = {https://doi.org/10.1177/1094342011403516},
doi = {10.1177/1094342011403516},
journal = {Int. J. High Perform. Comput. Appl.},
month = nov,
pages = {496--509},
numpages = {14},
keywords = {sparse matrices, combinatorial scientific computing, Betweenness centrality, parallel graph library, graph analysis, Markov clustering, software framework, mathematical software, combinatorial BLAS}
}
  
@article{sato_2017, 
title={A linear algebraic approach to datalog evaluation}, 
volume={17}, DOI={10.1017/S1471068417000023}, 
number={3}, 
journal={Theory and Practice of Logic Programming}, 
publisher={Cambridge University Press}, 
author={SATO, TAISUKE}, 
year={2017}, 
pages={244–265}
}

@inproceedings{10.1145/2463676.2467799,
author = {Shao, Bin and Wang, Haixun and Li, Yatao},
title = {Trinity: A Distributed Graph Engine on a Memory Cloud},
year = {2013},
isbn = {9781450320375},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2463676.2467799},
doi = {10.1145/2463676.2467799},
abstract = {Computations performed by graph algorithms are data driven, and require a high degree of random data access. Despite the great progresses made in disk technology, it still cannot provide the level of efficient random access required by graph computation. On the other hand, memory-based approaches usually do not scale due to the capacity limit of single machines. In this paper, we introduce Trinity, a general purpose graph engine over a distributed memory cloud. Through optimized memory management and network communication, Trinity supports fast graph exploration as well as efficient parallel computing. In particular, Trinity leverages graph access patterns in both online and offline computation to optimize memory and communication for best performance. These enable Trinity to support efficient online query processing and offline analytics on large graphs with just a few commodity machines. Furthermore, Trinity provides a high level specification language called TSL for users to declare data schema and communication protocols, which brings great ease-of-use for general purpose graph management and computing. Our experiments show Trinity's performance in both low latency graph queries as well as high throughput graph analytics on web-scale, billion-node graphs.},
booktitle = {Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data},
pages = {505--516},
numpages = {12},
keywords = {graph database, memory cloud, distributed system},
location = {New York, New York, USA},
series = {SIGMOD '13}
}

@article{10.1016/j.websem.2005.06.005,
author = {Guo, Yuanbo and Pan, Zhengxiang and Heflin, Jeff},
title = {LUBM: A Benchmark for OWL Knowledge Base Systems},
year = {2005},
issue_date = {October, 2005},
publisher = {Elsevier Science Publishers B. V.},
address = {NLD},
volume = {3},
number = {2--3},
issn = {1570-8268},
url = {https://doi.org/10.1016/j.websem.2005.06.005},
doi = {10.1016/j.websem.2005.06.005},
abstract = {We describe our method for benchmarking Semantic Web knowledge base systems with respect to use in large OWL applications. We present the Lehigh University Benchmark (LUBM) as an example of how to design such benchmarks. The LUBM features an ontology for the university domain, synthetic OWL data scalable to an arbitrary size, 14 extensional queries representing a variety of properties, and several performance metrics. The LUBM can be used to evaluate systems with different reasoning capabilities and storage mechanisms. We demonstrate this with an evaluation of two memory-based systems and two systems with persistent storage.},
journal = {Web Semant.},
month = oct,
pages = {158--182},
numpages = {25},
keywords = {Knowledge base system, Lehigh University Benchmark, Evaluation, Semantic Web}
}

@InProceedings{10.1007/978-3-030-54832-2_6,
author="Orachev, Egor
and Epelbaum, Ilya
and Azimov, Rustam
and Grigorev, Semyon",
editor="Darmont, J{\'e}r{\^o}me
and Novikov, Boris
and Wrembel, Robert",
title="Context-Free Path Querying by Kronecker Product",
booktitle="Advances in Databases and Information Systems",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="49--59",
abstract="Context-free path queries (CFPQ) extend the regular path queries (RPQ) by allowing context-free grammars to be used as constraints for paths. Algorithms for CFPQ are actively developed, but J. Kuijpers et al. have recently concluded, that existing algorithms are not performant enough to be used in real-world applications. Thus the development of new algorithms for CFPQ is justified. In this paper, we provide a new CFPQ algorithm which is based on such linear algebra operations as Kronecker product and transitive closure and handles grammars presented as recursive state machines. Thus, the proposed algorithm can be implemented by using high-performance libraries and modern parallel hardware. Moreover, it avoids grammar growth which provides the possibility for queries optimization.",
isbn="978-3-030-54832-2"
}
@article{10.1145/258994.259006,
author = {Melski, David and Reps, Thomas},
title = {Interconvertbility of Set Constraints and Context-Free Language Reachability},
year = {1997},
issue_date = {Dec. 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {12},
issn = {0362-1340},
url = {https://doi.org/10.1145/258994.259006},
doi = {10.1145/258994.259006},
abstract = {We show the interconvertibility of context-free-language reachability problems and a class of set-constraint problems: given a context-free-language reachability problem, we show how to construct a set-constraint problem whose answer gives a solution to the reachability problem; given a set-constraint problem, we show how to construct a context-free-language reachability problem whose answer gives a solution to the set-constraint problem. The interconvertibility of these two formalisms offers an conceptual advantage akin to the advantage gained from the interconvertibility of finite-state automata and regular expressions in formal language theory, namely, a problem can be formulated in whichever formalism is most natural. It also offers some insight into the "O(n3) bottleneck" for different types of program-analysis problems, and allows results previously obtained for context-free-language reachability problems to be applied to set-constraint problems.},
journal = {SIGPLAN Not.},
month = dec,
pages = {74–89},
numpages = {16}
}
@inproceedings{10.5555/271338.271343,
author = {Reps, Thomas},
title = {Program Analysis via Graph Reachability},
year = {1997},
isbn = {0262631806},
publisher = {MIT Press},
address = {Cambridge, MA, USA},
booktitle = {Proceedings of the 1997 International Symposium on Logic Programming},
pages = {5–19},
numpages = {15},
location = {Port Washington, New York, USA},
series = {ILPS '97}
}
@inproceedings{10.5555/788019.788876,
author = {Heintze, Nevin and McAllester, David},
title = {On the Cubic Bottleneck in Subtyping and Flow Analysis},
year = {1997},
isbn = {0818679255},
publisher = {IEEE Computer Society},
address = {USA},
abstract = {We prove that certain data-flow and control-flow problems are 2NPDA-complete. This means that these problems are in the class 2NPDA and that they are hard for that class. The fact that they are in 2NPDA demonstrates the richness of the class. The fact that they are hard for 2NPDA can be interpreted as evidence they can not be solved in sub-cubic time --- the cubic time decision procedure for an arbitrary 2NPDA problem has not been improved since its discovery in 1968.},
booktitle = {Proceedings of the 12th Annual IEEE Symposium on Logic in Computer Science},
pages = {342},
numpages = {1},
series = {LICS '97}
}
@inproceedings{10.1145/2746539.2746609,
author = {Henzinger, Monika and Krinninger, Sebastian and Nanongkai, Danupon and Saranurak, Thatchaphol},
title = {Unifying and Strengthening Hardness for Dynamic Problems via the Online Matrix-Vector Multiplication Conjecture},
year = {2015},
isbn = {9781450335362},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2746539.2746609},
doi = {10.1145/2746539.2746609},
abstract = {Consider the following Online Boolean Matrix-Vector Multiplication problem: We are given an n x n matrix M and will receive n column-vectors of size n, denoted by v1, ..., vn, one by one. After seeing each vector vi, we have to output the product Mvi before we can see the next vector. A naive algorithm can solve this problem using O(n3) time in total, and its running time can be slightly improved to O(n3/log2 n) [Williams SODA'07]. We show that a conjecture that there is no truly subcubic (O(n3-ε)) time algorithm for this problem can be used to exhibit the underlying polynomial time hardness shared by many dynamic problems. For a number of problems, such as subgraph connectivity, Pagh's problem, d-failure connectivity, decremental single-source shortest paths, and decremental transitive closure, this conjecture implies tight hardness results. Thus, proving or disproving this conjecture will be very interesting as it will either imply several tight unconditional lower bounds or break through a common barrier that blocks progress with these problems. This conjecture might also be considered as strong evidence against any further improvement for these problems since refuting it will imply a major breakthrough for combinatorial Boolean matrix multiplication and other long-standing problems if the term "combinatorial algorithms" is interpreted as "Strassen-like algorithms" [Ballard et al. SPAA'11].The conjecture also leads to hardness results for problems that were previously based on diverse problems and conjectures -- such as 3SUM, combinatorial Boolean matrix multiplication, triangle detection, and multiphase -- thus providing a uniform way to prove polynomial hardness results for dynamic algorithms; some of the new proofs are also simpler or even become trivial. The conjecture also leads to stronger and new, non-trivial, hardness results, e.g., for the fully-dynamic densest subgraph and diameter problems.},
booktitle = {Proceedings of the Forty-Seventh Annual ACM Symposium on Theory of Computing},
pages = {21–30},
numpages = {10},
keywords = {lower bounds, dynamic graph algorithms},
location = {Portland, Oregon, USA},
series = {STOC '15}
}
@INPROCEEDINGS{8948597,
author={J. {van den Brand} and D. {Nanongkai} and T. {Saranurak}},
booktitle={2019 IEEE 60th Annual Symposium on Foundations of Computer Science (FOCS)}, 
title={Dynamic Matrix Inverse: Improved Algorithms and Matching Conditional Lower Bounds}, 
year={2019},
volume={},
number={},
pages={456-480},
}
@InProceedings{HellSinglePath,
author="Hellings, Jelle",
editor="Qin, Lu
and Zhang, Wenjie
and Zhang, Ying
and Peng, You
and Kato, Hiroyuki
and Wang, Wei
and Xiao, Chuan",
title="Explaining Results of Path Queries on Graphs",
booktitle="Software Foundations for Data Interoperability and Large Scale Graph Data Analytics",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="84--98",
abstract="Many graph query languages use, at their core, path queries that yield node pairs that are connected by a path of interest. For the end-user, such node pairs only give limited insight as to why this query result is obtained, as the pair does not directly identify the underlying path of interest. To address this limitation of path queries, we propose the single-path semantics, which evaluates path queries to, for each node pair (m, n), a single path from m to n satisfying the conditions of the query. To put our proposal in practice, we provide an efficient algorithm for evaluating context-free path queries, a particular powerful type of path queries, using the single-path semantics. Additionally, we perform a short evaluation of our techniques that shows that the single-path semantics is practically feasible, even when query results grow large.",
isbn="978-3-030-61133-0"
}
@inproceedings{YanSCA,
author = {Yan, Dacong and Xu, Harry and Rountev, Atanas},
year = {2011},
month = {01},
pages = {155-165},
title = {Demand-driven context-sensitive alias analysis for Java},
journal = {2011 International Symposium on Software Testing and Analysis, ISSTA 2011 - Proceedings},
doi = {10.1145/2001420.2001440}
}
@article{10.1145/3428301,
author = {Sui, Yulei and Cheng, Xiao and Zhang, Guanqin and Wang, Haoyu},
title = {Flow2Vec: Value-Flow-Based Precise Code Embedding},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428301},
doi = {10.1145/3428301},
abstract = {Code embedding, as an emerging paradigm for source code analysis, has attracted much attention over the past few years. It aims to represent code semantics through distributed vector representations, which can be used to support a variety of program analysis tasks (e.g., code summarization and semantic labeling). However, existing code embedding approaches are intraprocedural, alias-unaware and ignoring the asymmetric transitivity of directed graphs abstracted from source code, thus they are still ineffective in preserving the structural information of code. This paper presents Flow2Vec, a new code embedding approach that precisely preserves interprocedural program dependence (a.k.a value-flows). By approximating the high-order proximity, i.e., the asymmetric transitivity of value-flows, Flow2Vec embeds control-flows and alias-aware data-flows of a program in a low-dimensional vector space. Our value-flow embedding is formulated as matrix multiplication to preserve context-sensitive transitivity through CFL reachability by filtering out infeasible value-flow paths. We have evaluated Flow2Vec using 32 popular open-source projects. Results from our experiments show that Flow2Vec successfully boosts the performance of two recent code embedding approaches codevec and codeseq for two client applications, i.e., code classification and code summarization. For code classification, Flow2Vec improves codevec with an average increase of 21.2%, 20.1% and 20.7% in precision, recall and F1, respectively. For code summarization, Flow2Vec outperforms codeseq by an average of 13.2%, 18.8% and 16.0% in precision, recall and F1, respectively.},
journal = {Proc. ACM Program. Lang.},
month = nov,
articleno = {233},
numpages = {27},
keywords = {Flow2Vec, code embedding, asymmetric transitivity, value-flows}
}
@article{10.1145/3093336.3037744,
author = {Wang, Kai and Hussain, Aftab and Zuo, Zhiqiang and Xu, Guoqing and Amiri Sani, Ardalan},
title = {Graspan: A Single-Machine Disk-Based Graph System for Interprocedural Static Analyses of Large-Scale Systems Code},
year = {2017},
issue_date = {April 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {4},
issn = {0362-1340},
url = {https://doi.org/10.1145/3093336.3037744},
doi = {10.1145/3093336.3037744},
abstract = {There is more than a decade-long history of using static analysis to find bugs in systems such as Linux. Most of the existing static analyses developed for these systems are simple checkers that find bugs based on pattern matching. Despite the presence of many sophisticated interprocedural analyses, few of them have been employed to improve checkers for systems code due to their complex implementations and poor scalability. In this paper, we revisit the scalability problem of interprocedural static analysis from a "Big Data" perspective. That is, we turn sophisticated code analysis into Big Data analytics and leverage novel data processing techniques to solve this traditional programming language problem. We develop Graspan, a disk-based parallel graph system that uses an edge-pair centric computation model to compute dynamic transitive closures on very large program graphs.We implement context-sensitive pointer/alias and dataflow analyses on Graspan. An evaluation of these analyses on large codebases such as Linux shows that their Graspan implementations scale to millions of lines of code and are much simpler than their original implementations. Moreover, we show that these analyses can be used to augment the existing checkers; these augmented checkers uncovered 132 new NULL pointer bugs and 1308 unnecessary NULL tests in Linux 4.4.0-rc5, PostgreSQL 8.3.9, and Apache httpd 2.2.18.},
journal = {SIGPLAN Not.},
month = apr,
pages = {389--404},
numpages = {16},
keywords = {disk-based systems, static analysis, graph processing}
}
@inbook{databasebook,
author = {Abiteboul, Serge and Hull, Richard and Vianu, Victor},
year = {1995},
month = {01},
pages = {},
title = {Foundations of Databases},
isbn = {0-201-53771-0}
}
